services:
  mysql:
    image: mysql
    container_name: mysql_container
    ports:
      - 33306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: shopdevgo
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./data/mysql:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6381:6379"
    environment:
      - REDIS_PASSWORD=
      - REDIS_DATABASE=0
    volumes:
      - ./data/redis:/data
  # crm.shopdev.com:
  #   container_name: go_backend_crm_shopdev
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: always
  #   depends_on:
  #     - mysql
  #     - redis
  #   ports:
  #     - "8008:8002"

  kafka:
    image: "bitnami/kafka:3.5"
    container_name: pre_kafka_container
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      # 172.15.183.28 => IP network
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://xxx.xx.x.xxx:19092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@pre_kafka_container:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M
      # uuid 22 bit
      KAFKA_KRAFT_CLUSTER_ID: -YYNj8hQpJVY1j9fSV32QA
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 1
    ports:
      - "19092:9092"
      - "19093:9093"
    volumes:
      - ./data/kafka/broker1:/bitnami/kafka:rw

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: pre_kafka_container:9092
    ports:
      - "9091:8080"
    depends_on:
      - kafka
